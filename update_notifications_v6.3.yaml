blueprint:
  name: Update Notifications v6.3 — relative reminders (minutes, fixed)
  description: >
    Sender påmindelser om Home Assistant updates (domain: update) relativt til hvornår de blev "on",
    i MINUTTER. Matcher i et 60s vindue, så påmindelsen ikke misses ved /1-minut tick.
    Virker selv uden at vælge specifikke entities (scanner alle update.*).
  domain: automation
  input:
    target_updates:
      name: (Valgfrit) Vælg specifikke update-entities
      description: Hvis tom, overvåges alle update.*
      default: []
      selector:
        entity:
          domain: update
          multiple: true

    reminder_after_minutes:
      name: Første påmindelse efter (minutter)
      description: 0 = straks efter at den bliver 'on'
      default: 60
      selector:
        number:
          min: 0
          max: 1440
          step: 1
          unit_of_measurement: minutes
          mode: box

    repeat_every_minutes:
      name: Gentag hver (minutter, 0 = ingen gentagelse)
      description: Brug fx 1–5 til hurtig test
      default: 0
      selector:
        number:
          min: 0
          max: 1440
          step: 1
          unit_of_measurement: minutes
          mode: box

    notify_devices:
      name: Enheder at notificere (mobile_app)
      description: Vælg én/flere telefoner
      selector:
        device:
          integration: mobile_app
          multiple: true

    also_persistent:
      name: Også som HA persistent notification
      default: true
      selector:
        boolean: {}

mode: restart
max_exceeded: silent

variables:
  _targets: !input target_updates
  _after: !input reminder_after_minutes
  _repeat: !input repeat_every_minutes
  _notify: !input notify_devices
  _also_persistent: !input also_persistent

  # Hvilke entities overvåges
  monitored_updates: >-
    {% set sel = _targets if _targets is iterable and (_targets|count)>0 else
       (states.update | map(attribute='entity_id') | list) %}
    {{ sel }}

  # Find updates der er due NU, robust i sekunder (60s vindue)
  due_updates: >-
    {%- set after = (_after|int(0)) * 60 -%}
    {%- set repeat = (_repeat|int(0)) * 60 -%}
    {%- set now_ts = as_timestamp(now()) -%}
    {%- set due = [] -%}
    {%- for e in monitored_updates -%}
      {%- set s = states.get(e) -%}
      {%- if s and s.state == 'on' and (not s.attributes.in_progress) -%}
        {%- set age = now_ts - as_timestamp(s.last_changed) -%}
        {%- if after <= 0 -%}
          {# Første minute efter 'on' #}
          {%- if repeat > 0 -%}
            {# Gentag hver repeat: ram hvis inden for 60s af hvert repeat-multiple #}
            {%- set is_due = (age >= 0) and ((age % repeat) < 60) -%}
          {%- else -%}
            {%- set is_due = (age >= 0) and (age < 60) -%}
          {%- endif -%}
        {%- else -%}
          {%- if repeat > 0 -%}
            {%- set over = age - after -%}
            {%- set is_due = (over >= 0) and ((over % repeat) < 60) -%}
          {%- else -%}
            {%- set is_due = (age >= after) and (age < after + 60) -%}
          {%- endif -%}
        {%- endif -%}
        {%- if is_due -%}
          {%- set _ = due.append(e) -%}
        {%- endif -%}
      {%- endif -%}
    {%- endfor -%}
    {{ due }}

  due_names: >-
    {% if due_updates|count == 0 %}Ingen
    {% else %}{{ due_updates | map('replace','update.','') | join(', ') }}
    {% endif %}

trigger:
  # Tjek hvert minut (robust 60s vindue i templaten)
  - id: tick
    platform: time_pattern
    minutes: "/1"

  # Ekstra: send straks når en bliver 'on'
  - id: new
    platform: state
    entity_id: !input target_updates
    to: "on"
    # Hvis ingen mål er valgt, så denne triggerer ikke — 'tick' klarer reminders.

  # Manuel kørsel (Kør handlinger)
  - id: manual
    platform: event
    event_type: automation_reloaded  # dummy; 'manual run' kommer som ukendt/none alligevel

condition: []

action:
  - choose:

      # — Reminder/minut-tick —
      - conditions: "{{ trigger.id == 'tick' and (due_updates | count) > 0 }}"
        sequence:
          - variables:
              msg_title: "🔔 Opdateringspåmindelse ({{ due_updates|count }})"
              msg_body: >-
                Følgende updates er due: {{ due_names }}.
                {% if _repeat|int(0) > 0 %}
                (Første efter {{ _after }} min, gentages hver {{ _repeat }} min.)
                {% else %}
                (Engangspåmindelse efter {{ _after }} min.)
                {% endif %}

          - choose:
              - conditions: "{{ _notify is defined and (_notify|count) > 0 }}"
                sequence:
                  - repeat:
                      for_each: "{{ _notify }}"
                      sequence:
                        - device_id: "{{ repeat.item }}"
                          domain: mobile_app
                          type: notify
                          title: "{{ msg_title }}"
                          message: "{{ msg_body }}"
                          data:
                            tag: "update_reminder"

          - if: "{{ _also_persistent }}"
            then:
              - service: persistent_notification.create
                data:
                  notification_id: update_reminder
                  title: "{{ msg_title }}"
                  message: "{{ msg_body }}"

      # — Ny update -> send straks (kun hvis mål er valgt) —
      - conditions: "{{ trigger.id == 'new' }}"
        sequence:
          - variables:
              eid: "{{ trigger.entity_id }}"
              msg_title: "{{ state_attr(eid, 'friendly_name') or eid }}"
              msg_body: >-
                Ny opdatering klar.
                Nyeste: {{ state_attr(eid, 'latest_version') }}
                \nInstalleret: {{ state_attr(eid, 'installed_version') }}

          - choose:
              - conditions: "{{ _notify is defined and (_notify|count) > 0 }}"
                sequence:
                  - repeat:
                      for_each: "{{ _notify }}"
                      sequence:
                        - device_id: "{{ repeat.item }}"
                          domain: mobile_app
                          type: notify
                          title: "{{ msg_title }}"
                          message: "{{ msg_body }}"
                          data:
                            tag: "{{ eid | replace('update.','') }}"

          - if: "{{ _also_persistent }}"
            then:
              - service: persistent_notification.create
                data:
                  notification_id: "{{ eid | replace('update.','') }}"
                  title: "{{ msg_title }}"
                  message: "{{ msg_body }}"

      # — Manuel run: vis en test/opsummering nu —
      - conditions: "{{ trigger is not defined or trigger.id not in ['tick','new'] }}"
        sequence:
          - variables:
              list_on: >-
                {{
                  (monitored_updates
                    | select('in', states.update
                      | selectattr('state','eq','on')
                      | rejectattr('attributes.in_progress','eq',true)
                      | map(attribute='entity_id') | list)
                    | list)
                }}
              msg_title: >-
                🔍 Test/opsummering ({{ list_on|count }} pending)
              msg_body: >-
                {{ list_on | map('replace','update.','') | map('regex_replace','^','- ') | join('\n') if list_on|count>0 else 'Ingen pending updates.' }}

          - choose:
              - conditions: "{{ _notify is defined and (_notify|count) > 0 }}"
                sequence:
                  - repeat:
                      for_each: "{{ _notify }}"
                      sequence:
                        - device_id: "{{ repeat.item }}"
                          domain: mobile_app
                          type: notify
                          title: "{{ msg_title }}"
                          message: "{{ msg_body }}"
                          data:
                            tag: "update_manual"

          - if: "{{ _also_persistent }}"
            then:
              - service: persistent_notification.create
                data:
                  notification_id: update_manual
                  title: "{{ msg_title }}"
                  message: "{{ msg_body }}"
