blueprint:
  name: Update Notifications v6.3 â€” relative reminders (minutes)
  description: >
    Sender pÃ¥mindelser om Home Assistant updates (entities i domain 'update'),
    relativt til hvornÃ¥r de blev "on". FÃ¸rste pÃ¥mindelse kommer efter det
    valgte antal MINUTTER, og du kan valgfrit gentage med et minut-interval.
    Ignorerer updates med attributes.in_progress = true.
  domain: automation
  input:
    reminder_after_minutes:
      name: FÃ¸rste pÃ¥mindelse efter (minutter)
      description: "Antal minutter fra update blev 'on' til fÃ¸rste pÃ¥mindelse (0 = straks)."
      default: 60
      selector:
        number:
          min: 0
          max: 1440
          unit_of_measurement: minutes
          mode: box

    repeat_every_minutes:
      name: Gentag hver (minutter, 0 = ingen gentagelse)
      description: "SÃ¦t til 0 for kun Ã©n pÃ¥mindelse. Brug smÃ¥ vÃ¦rdier (fx 1-5) til hurtig test."
      default: 0
      selector:
        number:
          min: 0
          max: 1440
          unit_of_measurement: minutes
          mode: box

    notify_devices:
      name: Enheder at notificere (mobile_app)
      description: "VÃ¦lg Ã©n eller flere telefoner/tablets (mobile_app)."
      selector:
        device:
          integration: mobile_app
          multiple: true

mode: restart
max_exceeded: silent

variables:
  _after_mins: !input reminder_after_minutes
  _repeat_mins: !input repeat_every_minutes
  _notify_devices: !input notify_devices

  # Liste over update-entities der er "due" lige nu ift. minutes-logikken
  due_updates: >-
    {% set updates = states.update
         | selectattr('state','eq','on')
         | rejectattr('attributes.in_progress','eq',true)
         | list %}
    {% set now_ts = as_timestamp(now()) %}
    {% set due = [] %}
    {% for s in updates %}
      {% set age_m = ((now_ts - as_timestamp(s.last_changed)) / 60) | int(0) %}
      {% if _after_mins <= 0 %}
        {# FÃ¸rste pÃ¥mindelse straks nÃ¥r den er 'on' #}
        {% set first_due = (age_m >= 0) %}
      {% else %}
        {# FÃ¸rste pÃ¥mindelse nÃ¥r alder >= _after_mins #}
        {% set first_due = (age_m >= _after_mins) %}
      {% endif %}

      {% if _repeat_mins | int(0) > 0 %}
        {# Gentagelse: efter fÃ¸rste pÃ¥mindelse, hver _repeat_mins #}
        {% set repeat_due = (age_m >= _after_mins) and ((age_m - _after_mins) % _repeat_mins == 0) %}
        {% set is_due = repeat_due %}
      {% else %}
        {# Kun Ã©n pÃ¥mindelse: ram kun det MINUT hvor age_m == _after_mins #}
        {% set is_due = first_due and (age_m == _after_mins) %}
      {% endif %}

      {% if is_due %}
        {% set _ = due.append(s) %}
      {% endif %}
    {% endfor %}
    {{ due }}

  due_names: >-
    {% if due_updates | count == 0 %}
      Ingen
    {% else %}
      {{ due_updates | map(attribute='name') | list | join(', ') }}
    {% endif %}

trigger:
  # KÃ¸r hvert minut sÃ¥ vi kan fange prÃ¦cise minut-grÃ¦nser
  - id: tick
    platform: time_pattern
    minutes: "/1"

condition:
  # Kun hvis der faktisk er noget "due" netop dette minut
  - condition: template
    value_template: "{{ (due_updates | count) > 0 }}"

action:
  - variables:
      msg_title: >-
        ðŸ”” OpdateringspÃ¥mindelse ({{ due_updates | count }})
      msg_body: >-
        FÃ¸lgende opdateringer er due: {{ due_names }}.
        {% if _repeat_mins | int(0) > 0 %}
        (FÃ¸rste efter {{ _after_mins }} min, gentages hver {{ _repeat_mins }} min.)
        {% else %}
        (FÃ¸rste og eneste pÃ¥mindelse {{ _after_mins }} min efter status blev 'on'.)
        {% endif %}

  # Send til valgte mobile_app-enheder
  - choose:
      - conditions: "{{ _notify_devices is defined and (_notify_devices | length) > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ _notify_devices }}"
              sequence:
                - device_id: "{{ repeat.item }}"
                  domain: mobile_app
                  type: notify
                  title: "{{ msg_title }}"
                  message: "{{ msg_body }}"
                  data:
                    notification_icon: "mdi:update"

  # Fallback: persistent notification i HA
  - service: persistent_notification.create
    data:
      title: "{{ msg_title }}"
      message: "{{ msg_body }}"
