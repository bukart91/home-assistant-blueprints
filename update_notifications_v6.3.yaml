blueprint:
  name: "Update Notifications — Test 1m (minimal)"
  description: >
    Minimal blueprint til at teste snooze 1 minut for update.* enheder.
    Indeholder: new/done triggers, skip, snooze_1m (Android/iOS), og enkel notifikation.
  domain: automation
  source_url: https://raw.githubusercontent.com/bukart91/home-assistant-blueprints/main/update_notifications_test1m_minimal.yaml

  input:
    update_entities:
      name: Update entities
      selector:
        entity:
          domain: update
          multiple: true

    notify_devices:
      name: Devices Notified (1+)
      default: []
      selector:
        device:
          filter:
            - integration: mobile_app
          multiple: true

    only_after:
      name: Kun efter
      default: "00:00:00"
      selector: { time: {} }

    only_before:
      name: Kun før
      default: "23:59:59"
      selector: { time: {} }

mode: parallel
max: 50

variables:
  _only_after: !input only_after
  _only_before: !input only_before

trigger:
  - id: new
    platform: state
    entity_id: !input update_entities
    to: "on"

  - id: done
    platform: state
    entity_id: !input update_entities
    from: "on"
    to: "off"

  # Mobile actions (Android/iOS)
  - id: skip
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: skip-update

  - id: skip_ios
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      actionName: skip-update

  - id: snooze_1m
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: snooze_1m

  - id: snooze_1m_ios
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      actionName: snooze_1m

condition: []

action:
  - choose:

      # === New -> send notification ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'new' }}"
        sequence:
          - variables:
              entity_id: "{{ trigger.entity_id }}"
          - condition: time
            after: !input only_after
            before: !input only_before
          - repeat:
              for_each: !input notify_devices
              sequence:
                - variables:
                    notify_service: "{{ 'notify.mobile_app_' ~ (device_attr(repeat.item,'name') | slugify) }}"
                - service: "{{ notify_service }}"
                  data:
                    title: "{{ state_attr(entity_id, 'friendly_name') }}"
                    message: |
                      Nyeste: {{ state_attr(entity_id, 'latest_version') }}
                      Installeret: {{ state_attr(entity_id, 'installed_version') }}
                    data:
                      tag: "{{ entity_id | replace('update.','') }}"
                      channel: Updates
                      group: Updates
                      actions:
                        - action: skip-update
                          title: Skip
                          destructive: true
                        - action: snooze_1m
                          title: "Påmind om 1 minut"

      # === Done -> dismiss notification ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'done' }}"
        sequence:
          - variables:
              tag_id: "{{ trigger.entity_id | replace('update.','') }}"
          - repeat:
              for_each: !input notify_devices
              sequence:
                - variables:
                    notify_service: "{{ 'notify.mobile_app_' ~ (device_attr(repeat.item,'name') | slugify) }}"
                - service: "{{ notify_service }}"
                  data:
                    message: clear_notification
                    data:
                      tag: "{{ tag_id }}"

      # === Skip -> call update.skip ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id in ['skip','skip_ios'] }}"
        sequence:
          - variables:
              entity_id: >-
                {{ 'update.' ~ (
                   trigger.event.data.action_data.tag
                     if trigger.event.data is mapping
                     and trigger.event.data.action_data.tag is string
                     else '') }}
          - choose:
              - conditions: "{{ entity_id | regex_match('^update[.]') }}"
                sequence:
                  - service: update.skip
                    data:
                      entity_id: "{{ entity_id }}"

      # === Snooze 1m -> wait & re-notify ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id in ['snooze_1m','snooze_1m_ios'] }}"
        sequence:
          - variables:
              entity_id: >-
                {{ 'update.' ~ (
                   trigger.event.data.action_data.tag
                     if trigger.event.data is mapping
                     and trigger.event.data.action_data is mapping
                     and trigger.event.data.action_data.tag is string
                     else '') }}
          - delay:
              seconds: 60
          - condition: template
            value_template: "{{ entity_id | regex_match('^update[.]') and is_state(entity_id, 'on') }}"
          - condition: time
            after: !input only_after
            before: !input only_before
          - repeat:
              for_each: !input notify_devices
              sequence:
                - variables:
                    notify_service: "{{ 'notify.mobile_app_' ~ (device_attr(repeat.item,'name') | slugify) }}"
                - service: "{{ notify_service }}"
                  data:
                    title: "{{ state_attr(entity_id, 'friendly_name') }}"
                    message: |
                      (Påmindelse — 1 min) Nyeste: {{ state_attr(entity_id, 'latest_version') }}
                      Installeret: {{ state_attr(entity_id, 'installed_version') }}
                    data:
                      tag: "{{ entity_id | replace('update.','') }}"
                      channel: Updates
                      group: Updates
